name: Deploy
on:
  pull_request:
    branches:
      - main
    types: [closed]
env:
  DEVELOPER_DIR: /Applications/Xcode_14.0.app
  APP_VERSION: '2.4.2'
  SCHEME_NAME: 'EhPanda'
  ALTSTORE_JSON_PATH: './AltStore.json'
  BUILDS_PATH: '/tmp/action-builds'
  PAYLOAD_PATH: '/tmp/action-builds/Payload'
  ASC_KEY_PATH: '/Users/runner/private_keys'
  FILTER_SWIFT_PATH: './actions-tool/ReleaseNotesFilter.swift'
  FILTER_PATH: './actions-tool/ReleaseNotesFilter'
  ARCHIVE_PATH: '/tmp/action-builds/EhPanda.xcarchive'
  IPA_OUTPUT_PATH: '/tmp/action-builds/EhPanda.ipa'
  APP_DEV_PROVISION_PATH: '/tmp/action-builds/app_dev.mobileprovision'
  APP_DIS_PROVISION_PATH: '/tmp/action-builds/app_dis.mobileprovision'
  SHARE_EXTENSION_DEV_PROVISION_PATH: '/tmp/action-builds/share_extension_dev.mobileprovision'
  SHARE_EXTENSION_DIS_PROVISION_PATH: '/tmp/action-builds/share_extension_dis.mobileprovision'

jobs:
  Deploy:
    runs-on: macos-12
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Modify git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Install dependencies
        run: brew install rswift
      - name: Show Xcode version
        run: xcodebuild -version
      - name: Run tests
        run: xcodebuild clean test -scheme ${{ env.SCHEME_NAME }} -sdk iphonesimulator
          -destination 'platform=iOS Simulator,name=iPhone 14'
      - name: Bump version
        id: bump-version
        uses: yanamura/ios-bump-version@v1
        with:
          version: ${{ env.APP_VERSION }}
      - name: Xcode archive
        run: xcodebuild archive -destination 'generic/platform=iOS'
          -scheme ${{ env.SCHEME_NAME }} -archivePath ${{ env.ARCHIVE_PATH }} CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO CODE_SIGN_IDENTITY= CODE_SIGN_ENTITLEMENTS= GCC_OPTIMIZATION_LEVEL=s SWIFT_OPTIMIZATION_LEVEL=-O
      - name: Export .ipa file
        run: |
          mkdir -p ${{env.PAYLOAD_PATH}}
          mv ${{env.ARCHIVE_PATH}}/Products/Applications/${{env.SCHEME_NAME}}.app ${{env.PAYLOAD_PATH}}/${{env.SCHEME_NAME}}.app
          pushd ${{env.BUILDS_PATH}}
          zip -r ${{env.IPA_OUTPUT_PATH}} ./Payload
          popd
      - name: Retrieve data
        id: retrieve-data
        run: |
          swiftc -o $FILTER_PATH $FILTER_SWIFT_PATH
          sudo chmod 777 $FILTER_PATH
          echo "::set-output name=size::$(stat -f%z $IPA_OUTPUT_PATH)"
          echo "::set-output name=version_date::$(date -u +"%Y-%m-%dT%T")"
          echo "::set-output name=notes::$($FILTER_PATH "${{ github.event.pull_request.body }}")"
      - name: Validate data
        run: |
          [[ ! -z "${{ github.event.pull_request.body }}" ]] || exit 1
          [[ ! -z "${{ github.event.pull_request.title }}" ]] || exit 1
          [[ ! -z "${{ steps.retrieve-data.outputs.size }}" ]] || exit 1
          [[ ! -z "${{ steps.retrieve-data.outputs.notes }}" ]] || exit 1
          [[ ! -z "${{ steps.bump-version.outputs.version }}" ]] || exit 1
          [[ ! -z "${{ steps.bump-version.outputs.build-number }}" ]] || exit 1
          [[ ! -z "${{ steps.retrieve-data.outputs.version_date }}" ]] || exit 1
      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        with:
         fail_on_unmatched_files: true
         files: ${{ env.IPA_OUTPUT_PATH }}
         token: ${{ secrets.GITHUB_TOKEN }}
         body: ${{ github.event.pull_request.body }}
         name: ${{ github.event.pull_request.title }}
         tag_name: 'v${{ steps.bump-version.outputs.version }}_b${{ steps.bump-version.outputs.build-number }}'
      # - name: Upload to ASC
      #   run: xcrun altool --upload-app -t ios -f ${{ env.IPA_OUTPUT_PATH }}
      #     --apiKey ${{ secrets.ASC_KEY_ID }} --apiIssuer ${{ secrets.ASC_ISSUER_ID }}
      - name: Commit bump version
        run: |
          git add .
          git commit -m "Bump version"
          git push origin HEAD
      - name: Update AltStore.json
        run: |
          echo "`jq '.apps[0].size=${{ steps.retrieve-data.outputs.size }}' $ALTSTORE_JSON_PATH`" > $ALTSTORE_JSON_PATH
          echo "`jq '.apps[0].versionDescription="${{ steps.retrieve-data.outputs.notes }}"' $ALTSTORE_JSON_PATH`" > $ALTSTORE_JSON_PATH
          echo "`jq '.apps[0].versionDate="${{ steps.retrieve-data.outputs.version_date }}"' $ALTSTORE_JSON_PATH`" > $ALTSTORE_JSON_PATH
          echo "`jq '.apps[0].version="v${{ steps.bump-version.outputs.version }}b${{ steps.bump-version.outputs.build-number }}"' $ALTSTORE_JSON_PATH`" > $ALTSTORE_JSON_PATH
          echo "`jq '.apps[0].downloadURL="https://github.com/EhPanda-Team/EhPanda/releases/download/v${{ steps.bump-version.outputs.version }}_b${{ steps.bump-version.outputs.build-number }}/EhPanda.ipa"' $ALTSTORE_JSON_PATH`" > $ALTSTORE_JSON_PATH
      - name: Commit update AltStore.json
        run: |
          git add .
          git commit -m "Update AltStore.json"
          git push origin HEAD
      - name: Post release notes
        run: |
         curl https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
         -d parse_mode=markdown -d chat_id=${{ secrets.TELEGRAM_CHANNEL_ID }} \
         -d text='*v${{ steps.bump-version.outputs.version }}_b${{ steps.bump-version.outputs.build-number }} Release Notes:*%0A${{ github.event.pull_request.body }}'

         curl ${{ secrets.DISCORD_WEBHOOK }} \
         -F 'payload_json={"content": "**v${{ steps.bump-version.outputs.version }}_b${{ steps.bump-version.outputs.build-number }} Release Notes:**\n${{ steps.retrieve-data.outputs.notes }}"}'
