name: Deploy
on: [push]
#   pull_request:
#     branches:
#       - test/pipeline-mergeInto
#     types: [closed]
env:
   XCODE_VERSION: '13.0'
   SCHEME_NAME: 'EhPanda'
   SIMULATOR_IDENTIFIER: 'iPhone 12'
   BUILDS_PATH: '/tmp/action-builds'
   ARCHIVE_PATH: '/tmp/action-builds/EhPanda.xcarchive'
   APP_DEV_PROVISION_PATH: '/tmp/action-builds/app_dev.mobileprovision'
   SHARE_EXTENSION_DEV_PROVISION_PATH: '/tmp/action-builds/share_extension_dev.mobileprovision'
   DEV_CERTIFICATE_PATH: '/tmp/action-builds/dev.cer'
   DEV_P12_PATH: '/tmp/action-builds/dev.p12'
   SHARE_EXTENSION_DEV_PROVISION_BASE64: ${{ secrets.SHARE_EXTENSION_DEV_PROVISION }}
   APP_DEV_PROVISION_BASE64: ${{ secrets.APP_DEV_PROVISION }}
   DEV_CERTIFICATE_BASE64: ${{ secrets.DEV_CERTIFICATE }}
   DEV_P12_PASSWORD: ${{ secrets.DEV_P12_PASSWORD }}
   DEV_P12_BASE64: ${{ secrets.DEV_P12 }}
jobs:
  Deploy:
    runs-on: macos-11
#     if: github.event.pull_request.merged == true
#       && github.event.pull_request.user.login == 'tatsuz0u'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Select Xcode
        run: sudo xcode-select --switch /Applications/Xcode_${{ env.XCODE_VERSION }}.app
      - name: Show Xcode version
        run: xcodebuild -version
#       - name: Run tests
#         run: xcodebuild
#           -scheme ${{ env.SCHEME_NAME }} -sdk iphonesimulator
#           -destination 'platform=iOS Simulator,name=${{ env.SIMULATOR_IDENTIFIER }}'
#           clean test
      - name: Decode certificates and provisioning profiles
        run: |
          mkdir $BUILDS_PATH
          echo -n "$SHARE_EXTENSION_DEV_PROVISION_BASE64" | base64 -d -o $SHARE_EXTENSION_DEV_PROVISION_PATH
          echo -n "$APP_DEV_PROVISION_BASE64" | base64 -d -o $APP_DEV_PROVISION_PATH
          echo -n "$DEV_CERTIFICATE_BASE64" | base64 -d -o $DEV_CERTIFICATE_PATH
          echo -n "$DEV_P12_BASE64" | base64 -d -o $DEV_P12_PATH
      - name: Install certificates
        run: |
          KEY_CHAIN=action-builds.keychain-db
 
          security create-keychain -p $DEV_P12_PASSWORD $KEY_CHAIN
          security default-keychain -s $KEY_CHAIN
          security unlock-keychain -p $DEV_P12_PASSWORD $KEY_CHAIN
          security set-keychain-settings -t 3600 -u $KEY_CHAIN

          security import $DEV_CERTIFICATE_PATH -k $KEY_CHAIN -T /usr/bin/codesign
          security import $DEV_P12_PATH -k $KEY_CHAIN -P $DEV_P12_PASSWORD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k $DEV_P12_PASSWORD ~/Library/Keychains/action-builds.keychain-db
          
          security list-keychains
          security find-identity -p codesigning  ~/Library/Keychains/action-builds.keychain-db
      - name: Install provisioning profiles
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          app_uuid=`grep UUID -A1 -a $APP_DEV_PROVISION_PATH | grep -io "[-A-F0-9]\{36\}"`
          share_extension_uuid=`grep UUID -A1 -a $SHARE_EXTENSION_DEV_PROVISION_PATH | grep -io "[-A-F0-9]\{36\}"`
          cp $APP_DEV_PROVISION_PATH ~/Library/MobileDevice/Provisioning\ Profiles/$app_uuid.mobileprovision
          cp $SHARE_EXTENSION_DEV_PROVISION_PATH ~/Library/MobileDevice/Provisioning\ Profiles/$share_extension_uuid.mobileprovision
          ls ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Xcode archive
        run: xcodebuild
          -scheme ${{ env.SCHEME_NAME }} -archivePath ${{ env.ARCHIVE_PATH }}
          -destination 'generic/platform=iOS'
          archive
